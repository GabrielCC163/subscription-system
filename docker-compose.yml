version: "3.8"

services:
  public-service:
    build: ./public-service
    command: npm run start:dev
    volumes:
      - ./public-service:/app
      - ./app/node_modules
    env_file:
      - ./public-service/.env
    environment:
      SUBSCRIPTION_SERVICE_HOST: http://subscription-service:3001
    ports:
      - "3000:3000"
    depends_on:
      - subscription-service
    restart: always

  subscription-service:
    build: ./subscription-service
    command: npm run start:dev
    volumes:
      - ./subscription-service:/app
      - ./app/node_modules
    env_file:
      - ./subscription-service/.env
    environment:
      DB_HOST: db
      KAFKA_BROKERS: kafka:29092
    ports:
      - "3001:3001"
    depends_on:
      - db
      - email-service
    restart: always

  email-service:
    build: ./email-service
    command: npm run start:dev
    volumes:
      - ./email-service:/app
      - ./app/node_modules
    env_file:
      - ./email-service/.env
    environment:
      KAFKA_BROKERS: kafka:29092
    ports:
      - "3002:3002"
    depends_on:
      - kafka
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  db:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: subscription
      POSTGRES_DB: subscription
    ports:
      - "5432:5432"
    volumes:
      - db-data:/data/postgres
    restart: unless-stopped

volumes:
  db-data:
