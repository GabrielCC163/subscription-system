version: "3.8"

networks:
  app-net:
    driver: bridge

services:
  public-service:
    build: ./public-service
    command: npm run start:dev
    volumes:
      - ./public-service:/app
      - ./app/node_modules
    env_file:
      - ./public-service/.env
    environment:
      SUBSCRIPTION_SERVICE_HOST: http://subscription-service:3001
    ports:
      - "3000:3000"
    depends_on:
      - subscription-service
    restart: always
    networks:
      - app-net

  subscription-service:
    build: ./subscription-service
    command: npm run start:dev
    volumes:
      - ./subscription-service:/app
      - ./app/node_modules
    env_file:
      - ./subscription-service/.env
    environment:
      DB_HOST: db
      KAFKA_BROKERS: kafka:9092
    ports:
      - "3001:3001"
    depends_on:
      - db
      - email-service
    restart: always
    networks:
      - app-net

  email-service:
    build: ./email-service
    command: npm run start:dev
    volumes:
      - ./email-service:/app
      - ./app/node_modules
    env_file:
      - ./email-service/.env
    environment:
      KAFKA_BROKERS: kafka:9092
    ports:
      - "3002:3002"
    depends_on:
      - kafka
    restart: always
    networks:
      - app-net

  zookeeper:
    image: 'docker.io/bitnami/zookeeper:3-debian-10'
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-net

  kafka:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - app-net

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    networks:
      - app-net

  db:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: subscription
      POSTGRES_DB: subscription
    ports:
      - "5432:5432"
    volumes:
      - db-data:/data/postgres
    restart: unless-stopped
    networks:
      - app-net

volumes:
  db-data:
